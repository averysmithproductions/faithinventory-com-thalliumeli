swagger: '2.0'
info:
  description: This is a simple API
  version: 1.0.0
  title: Simple Inventory API
  # put the contact info for your development or API team
  contact:
    email: you@your-company.com

  license:
    name: Apache 2.0
    url: http://www.apache.org/licenses/LICENSE-2.0.html

# tags are used for organizing operations
tags:
- name: admins
  description: Secured Admin-only calls
- name: users
  description: Operations available to regular users
  
paths:
  /api/1/inventory/items:
    get:
      tags:
      - users
      summary: searches inventory items
      operationId: GetItems
      description: |
        Gets all inventory items in the system.
      produces:
      - application/json
      responses:
        200:
          description: search results matching criteria
          schema:
            type: array
            items:
              $ref: '#/definitions/FetchedInventoryItem'
  # this route should actually be
  #{proxy+}:
  # x-amazon-apigateway-any-method:
  #  but AWS Custom ANY verb but that causes a swagger error, so store the get verb instead. So put the direct route and the basic get verb to remove swagger error.
  /api/1/inventory/items/graphql: 
    get:
      tags:
      - users
      summary: searches inventory items
      operationId: RequestGraphQL
      description: |
        Gets all inventory items in the system.
      produces:
      - application/json
      parameters:
      - in: path
        name: proxy+
        required: true
        type: string
      responses:
        200:
          description: search results matching criteria
  /api/1/inventory/admin/s3/urls:
    get:
      tags:
      - admins
      summary: searches inventory items
      operationId: GetS3UploadUrl
      description: |
        Gets presigned urls for images to be loaded into S3.
      produces:
      - application/json
      parameters:
      - in: query
        name: amount
        type: number
        description: The amount of pre-signed urls to return.
      responses:
        200:
          description: success
          schema:
            type: array
            items:
              $ref: '#/definitions/PresignedUrl'
        401:
          description: success
      security:
      - AveryGoodAuthenticator: []
  /api/1/inventory/admin/magic-link:
    post:
      tags:
      - admins
      summary: sends a magic link
      operationId: SendAdminMagicLink
      description: sends a magic link to the submitted email so that an author can authenticate
      consumes:
      - application/json
      produces:
      - application/json
      parameters:
      - in: body
        name: author
        description: author to authenticate
        schema:
          $ref: '#/definitions/Author'
      responses:
        200:
          description: email sent, header Authorization cookie returned
          # the below object causes a swagger error so comment it out for now
          #   'x-amzn-Remapped-Authorization':
          #     schema:
          #       type: string
          #     description: custom authorization string that initially expires in 24 hours
        404:
          description: resource not found
  /api/1/inventory/admin/hash:
    get:
      tags:
        - admins
      summary: verify hash
      operationId: VerifyHash
      description: confirms that submitted key matches sign in key
      consumes:
      - application/json
      parameters:
      - in: query
        name: submittedKey
        type: string
        description: submitted key to be matched with sign in key that is retrieved from the Authorization Header
      responses:
        200:
          description: success
          # the below object causes a swagger error so comment it out for now
          # headers:
          #   'x-amzn-Remapped-Authorization':
          #     schema:
          #       type: string
          #     description: modified custom authorization string to expire in 7 days
        400:
          description: verification status is missing
        401:
          description: unauthorized access
        404:
          description: resource not found
      security:
      - AveryGoodAuthenticator: []
  /api/1/inventory/item:
    post:
      tags:
      - admins
      summary: creates an inventory item
      operationId: CreateItem
      description: inserts an inventory item into DynamoDB
      consumes:
      - application/json
      produces:
      - application/json
      parameters:
      - in: body
        name: author
        description: author to authenticate
        schema:
          $ref: '#/definitions/NewInventoryItem'
      responses:
        200:
          description: email sent, header Authorization cookie returned
          schema:
            type: object
            properties:
              id:
                type: string
              createdAt:
                type: string
              slugId:
                type: string
          # the below object causes a swagger error so comment it out for now
          # headers:
          #   'x-amzn-Remapped-Authorization':
          #     schema:
          #       type: string
          #     description: custom authorization string that initially expires in 24 hours
        400:
          description: caught error
        401:
          description: unauthorized access
      security:
      - AveryGoodAuthenticator: []
  /api/1/inventory/items/{id}:
    put:
      tags:
      - admins
      summary: creates an inventory item
      operationId: UpdateItem
      description: updates an inventory item in DynamoDB
      consumes:
      - application/json
      produces:
      - application/json
      parameters:
      - in: path
        name: id
        required: true
        type: string
      - in: body
        name: author
        description: author to authenticate
        schema:
          $ref: '#/definitions/UpdatedInventoryItem'
      responses:
        200:
          description: success
          # the below object causes a swagger error so comment it out for now
          # headers:
          #   'x-amzn-Remapped-Authorization':
          #     schema:
          #       type: string
          #     description: custom authorization string that initially expires in 24 hours
        400:
          description: caught error
        401:
          description: unauthorized access
        404:
          description: resource not found
      security:
      - AveryGoodAuthenticator: []
    delete:
      tags:
      - admins
      summary: deletes an inventory item
      operationId: DeleteItem
      description: deletes an inventory item from DynamoDB
      consumes:
      - application/json
      produces:
      - application/json
      parameters:
      - in: path
        name: id
        required: true
        type: string
      responses:
        200:
          description: success but could potentially throw DynamoDB error
          # the below object causes a swagger error so comment it out for now
          # headers:
          #   'x-amzn-Remapped-Authorization':
          #     schema:
          #       type: string
          #     description: custom authorization string that initially expires in 24 hours
        204:
          description: success
        404:
          description: resource not found
      security:
      - AveryGoodAuthenticator: []
  /api/1/inventory/admin/s3/images:
    delete:
      tags:
      - admins
      summary: deletes an inventory item
      operationId: DeleteImages
      description: deletes images from S3
      consumes:
      - application/json
      produces:
      - application/json
      parameters:
      - in: query
        name: ids
        type: string
        description: A comma delimited string of image ids to be deleted.
      responses:
        200:
          description: success but could potentially throw DynamoDB error
        204:
          description: success
          # the below object causes a swagger error so comment it out for now
          # headers:
          #   'x-amzn-Remapped-Authorization':
          #     schema:
          #       type: string
          #     description: custom authorization string that initially expires in 24 hours
        400:
          description: \'ids\' parameter is required.
        401:
          description: unauthorized access
      security:
      - AveryGoodAuthenticator: []
  /api/1/inventory/admin/cloudfront-cache:
    delete:
      tags:
      - admins
      summary: deletes cloudfront site cache
      operationId: DeleteCloudFrontCache
      description: deletes cloudfront cache so that the site pages can be refreshed. Mostly used to give Gatsby Cloud and Site Authors the ability to clear cache on command.
      consumes:
      - application/json
      produces:
      - application/json
      responses:
        204:
          description: success
          # the below object causes a swagger error so comment it out for now
          # headers:
          #   'x-amzn-Remapped-Authorization':
          #     schema:
          #       type: string
          #     description: custom authorization string that initially expires in 24 hours
        401:
          description: unauthorized access
      security:
      - AveryGoodAuthenticator: []
definitions:
  Author:
    description: author object
    properties:
      email:
        type: string
        description: email address
      signInKey:
        type: string
        description: sign in key authentication
  NewInventoryItem:
    type: object
    required:
    - title
    - summary
    - images
    - categories
    - price
    - moreInfoUrl
    properties:
      title:
        type: string
        description: name of the item
      summary:
        type: string
        example: summary of the item
      images:
        type: array
        items:
          type: string
          description: photo file path in S3
      categories:
        type: array
        items:
          type: string
          description: categories of the item
      price:
        type: number
        description: price of the item
      moreInfoUrl:
        type: number
        description: external url to learn more about the item
  FetchedInventoryItem:
    type: object
    required:
    - id
    - createdAt
    - slugId
    - title
    - summary
    - images
    - categories
    - price
    - moreInfoUrl
    properties:
      id:
        type: string
        format: uuid
        example: d290f1ee-6c54-4b01-90e6-d701748f0851
        description: ID of the item
      createdAt:
        type: string
        description: when this item was created
      slugId:
        type: string
        description: url-safe slug id of item
      title:
        type: string
        description: name of the item
      summary:
        type: string
        example: summary of the item
      images:
        type: array
        items:
          type: string
          description: photo file path in S3
      categories:
        type: array
        items:
          type: string
          description: categories of the item
      price:
        type: number
        description: price of the item
      moreInfoUrl:
        type: number
        description: external url to learn more about the item
  PresignedUrl:
    description: pre-signed url object
    properties:
      uploadURL:
        type: string
        description: the s3 url to upload to
      photoFilename:
        type: string
        description: the normalized filename that connects S3 to DynamoDB
  UpdatedInventoryItem:
    type: object
    properties:
      title:
        type: string
        description: name of the item
      summary:
        type: string
        example: summary of the item
      images:
        type: array
        items:
          type: string
          description: photo file path in S3
      categories:
        type: array
        items:
          type: string
          description: categories of the item
      price:
        type: number
        description: price of the item
      moreInfoUrl:
        type: number
        description: external url to learn more about the item
securityDefinitions:
  AveryGoodAuthenticator:
    type: "apiKey"
    name: "Authorization"
    in: "header"
    x-amazon-apigateway-authtype: "custom"
# Added by API Auto Mocking Plugin
host: virtserver.swaggerhub.com
# basePath: /averysmith/ThalliumEliApi/1.0.0
schemes:
 - https
# Added by API Auto Mocking Plugin
# basePath: /averysmith/ThalliumEliApi/1.0.0
# Added by API Auto Mocking Plugin
basePath: /averysmith/ThalliumEliApi/1.0.0